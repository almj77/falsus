<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Falsus.Shared</name>
    </assembly>
    <members>
        <member name="T:Falsus.Shared.Helpers.ResourceReader">
            <summary>
            Helper class to assist in reading DLL embedded resources.
            </summary>
        </member>
        <member name="M:Falsus.Shared.Helpers.ResourceReader.ReadContentsFromFile``1(System.String)">
            <summary>
            Reads the contents from the specified resouce file as JSON and deserializes as 
            an instance of the specified type parameter.
            </summary>
            <typeparam name="T">The type to deserilize the JSON.</typeparam>
            <param name="resourcePath">The path for the embedded resource.</param>
            <returns>The contents of the specified resource file as 
            an instnace of the specified type parameter.</returns>
        </member>
        <member name="M:Falsus.Shared.Helpers.ResourceReader.GetEmbeddedResourcePaths(System.String)">
            <summary>
            Gets a list of resources that are embedded within the specified path.
            </summary>
            <param name="path">The root path to retrieve resources from.</param>
            <returns>An array of <see cref="T:System.String"/> with paths to embedded resources.</returns>
        </member>
        <member name="T:Falsus.Shared.Avatar.AvatarModel">
            <summary>
            Describes an Avatar.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
            <seealso cref="T:System.IEquatable`1"/>
            <seealso cref="T:System.IComparable`1"/>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.Accessory">
            <summary>
            Gets or sets the avatar accessory.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarAccessory"/> values that indicates the accessory of the avatar.
            </value>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.ClotheColor">
            <summary>
            Gets or sets the color of the avatar clothes.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarClotheColor"/> values that indicates the color of the clothes.
            </value>
            <remarks>
            Clothe color is only applied when chosen along with one of the following <see cref="T:Falsus.Shared.Avatar.Enums.AvatarClotheType"/>:
            <list type="bullet">
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.CollarSweater"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.GraphicShirt"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.Hoodie"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.Overall"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.ShirtCrewNeck"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.ShirtScoopNeck"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.ShirtVNeck"/></item>
            </list>
            </remarks>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.ClotheType">
            <summary>
            Gets or sets the type of the avatar clothes.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarClotheType"/> values that indicates the type of the clothes.
            </value>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.ClotheGraphicType">
            <summary>
            Gets or sets the graphic of the avatar clothes.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType"/> values that indicates the graphic to draw on the clothes.
            </value>
            <remarks>
            Clothe Graphic is only applied when chosen along with <see cref="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.GraphicShirt"/>.
            </remarks>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.EyebrowType">
            <summary>
            Gets or sets the type of the avatar eyebrows.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarEyebrowType"/> values that indicates the type of the eyebrows.
            </value>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.EyeType">
            <summary>
            Gets or sets the type of the avatar eyes.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarEyeType"/> values that indicates the type of the eyes.
            </value>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.FacialHairColor">
            <summary>
            Gets or sets the color of the avatar facial hair.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor"/> values that indicates the color of the facial hair.
            </value>
            <remarks>
            Facial hair color is only applied when chosen along any of the possible values of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarFacialHairType"/>
            except the <see cref="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairType.Blank"/>.
            </remarks>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.FacialHairType">
            <summary>
            Gets or sets the type of the avatar facial hair.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarFacialHairType"/> values that indicates the type of facial hair.
            </value>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.HairColor">
            <summary>
            Gets or sets the color of the avatar hair.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarHairColor"/> values that indicates the color of the hair.
            </value>
            <remarks>
            Hair color is only applied when chosen along with one of the following <see cref="T:Falsus.Shared.Avatar.Enums.AvatarTop"/>:
            <list type="bullet">
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairBigHair"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairBob"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairBun"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairCurly"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairCurvy"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairDreads"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairFro"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairFroBand"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairMiaWallace"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairNotTooLong"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairStraight"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairStraight2"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairStraightStrand"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairDreads01"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairDreads02"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairFrizzle"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShaggyMullet"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShortCurly"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShortFlat"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShortRound"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShortWaved"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairSides"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairTheCaesar"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairTheCaesarSidePart"/></item>
            </list>
            </remarks>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.HatColor">
            <summary>
            Gets or sets the color of the avatar hat.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarHatColor"/> values that indicates the color of the hat.
            </value>
            <remarks>
            Hat color is only applied when chosen along with one of the following <see cref="T:Falsus.Shared.Avatar.Enums.AvatarTop"/>:
            <list type="bullet">
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.Hijab"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.Turban"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.WinterHat1"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.WinterHat2"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.WinterHat3"/></item>
            <item><see cref="F:Falsus.Shared.Avatar.Enums.AvatarTop.WinterHat4"/></item>
            </list>
            </remarks>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.MouthType">
            <summary>
            Gets or sets the type of the avatar mouth.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarMouthType"/> values that indicates the type of the mouth.
            </value>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.SkinColor">
            <summary>
            Gets or sets the avatar skin color.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarSkinColor"/> values that indicates the color of the skin.
            </value>
        </member>
        <member name="P:Falsus.Shared.Avatar.AvatarModel.Top">
            <summary>
            Gets or sets the hair/top accessory of the avatar.
            </summary>
            <value>
            One of the <see cref="T:Falsus.Shared.Avatar.Enums.AvatarTop"/> values that indicates the hair/top of the avatar.
            </value>
        </member>
        <member name="M:Falsus.Shared.Avatar.AvatarModel.CompareTo(Falsus.Shared.Avatar.AvatarModel)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer
            that indicates whether the current instance precedes, follows, or occurs in the same position
            in the sort order as the other object.
            </summary>
            <param name="other">An instance of <see cref="T:Falsus.Shared.Avatar.AvatarModel"/> to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings:
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <term>This instance precedes <paramref name="other"/> in the sort order.</term>
            </item>
            <item>
            <term>Zero</term>
            <term>This instance occurs in the same position in the sort order as <paramref name="other"/>.</term>
            </item>
            <item>
            <term>Greater than zero</term>
            <term>This instance follows <paramref name="other"/> in the sort order.</term>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Falsus.Shared.Avatar.AvatarModel.Equals(Falsus.Shared.Avatar.AvatarModel)">
            <summary>
            Indicates whether the current <see cref="T:Falsus.Shared.Avatar.AvatarModel"/> is equal to another <see cref="T:Falsus.Shared.Avatar.AvatarModel"/>.
            </summary>
            <param name="other">An instance of <see cref="T:Falsus.Shared.Avatar.AvatarModel"/> to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Avatar.AvatarModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Avatar.AvatarModel.GetHashCode">
            <summary>
            Calculates the hash for the current instance.
            </summary>
            <returns>
            An hash value based on the hash of a string
            containing the values of all properties, provided
            by the default hash function.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarAccessory">
            <summary>
            Specifies the Avatar accessory.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarAccessory.Blank">
            <summary>
            No accessory.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarAccessory.Kurt">
            <summary>
            Kurt Cobain sunglasses.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarAccessory.Prescription01">
            <summary>
            White prescription glasses.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarAccessory.Prescription02">
            <summary>
            Black prescription glasses.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarAccessory.Round">
            <summary>
            Round black glasses.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarAccessory.Sunglasses">
            <summary>
            Generic sunglasses.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarAccessory.Wayfarers">
            <summary>
            Wayfarer sunglasses.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarClotheColor">
            <summary>
            Specifies the color of the Avatar clothe.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Black">
            <summary>
            Black clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Blue01">
            <summary>
            Light blue clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Blue02">
            <summary>
            Blue clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Blue03">
            <summary>
            Dark blue clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Gray01">
            <summary>
            Light gray clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Gray02">
            <summary>
            Dark gray clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Heather">
            <summary>
            Heather-gray clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.PastelBlue">
            <summary>
            Pastel blue clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.PastelGreen">
            <summary>
            Pastel green clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.PastelOrange">
            <summary>
            Pastel orange clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.PastelRed">
            <summary>
            Pastel red clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.PastelYellow">
            <summary>
            Pastel yellow clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Pink">
            <summary>
            Pink clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.Red">
            <summary>
            Red clothes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheColor.White">
            <summary>
            White clothes.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType">
            <summary>
            Specifies the graphic to apply on the Avatar clothes.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Bat">
            <summary>
            Batman-like bat drawing.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Cumbia">
            <summary>
            "Cumbia!" message.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Deer">
            <summary>
            Deer drawing.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Diamond">
            <summary>
            Shining diamong drawing.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Hola">
            <summary>
            "Hola!" message.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Pizza">
            <summary>
            Pizza slice drawing.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Resist">
            <summary>
            "Resist!" message.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Selena">
            <summary>
            "Selena" logo.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Bear">
            <summary>
            Bear head drawing.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.SkullOutline">
            <summary>
            Skull outline drawing.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheGraphicType.Skull">
            <summary>
            Skull drawing.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarClotheType">
            <summary>
            Specifies type of clothe of the Avatar.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.BlazerShirt">
            <summary>
            Blazer and shirt.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.BlazerSweater">
            <summary>
            Blazer and sweater.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.CollarSweater">
            <summary>
            Sweater with collar.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.GraphicShirt">
            <summary>
            Shirt with graphic.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.Hoodie">
            <summary>
            Hoodie.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.Overall">
            <summary>
            Overall.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.ShirtCrewNeck">
            <summary>
            Crew neck shirt.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.ShirtScoopNeck">
            <summary>
            Scoop neck shirt.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarClotheType.ShirtVNeck">
            <summary>
            V neck shirt.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarEyebrowType">
            <summary>
            Specifies the Avatar eyebrow type.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.Angry">
            <summary>
            Angry eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.AngryNatural">
            <summary>
            Angry (thicker, less raised) eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.Default">
            <summary>
            Default eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.DefaultNatural">
            <summary>
            Default (thicker, semi-circle like) eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.FlatNatural">
            <summary>
            Flat eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.RaisedExcited">
            <summary>
            Excited eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.RaisedExcitedNatural">
            <summary>
            Excited (thicker, semi-circle like) eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.SadConcerned">
            <summary>
            Sad/Concerned eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.SadConcernedNatural">
            <summary>
            Sad/Concerned (thicker, semi-circle like) eyebrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.UnibrowNatural">
            <summary>
            Unibrows.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.UpDown">
            <summary>
            One raised eyebrow.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyebrowType.UpDownNatural">
            <summary>
            One raised (thicker, semi-circle like) eyebrow.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarEyeType">
            <summary>
            Specifies the type of the Avatar eyes.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Close">
            <summary>
            Closed eyes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Cry">
            <summary>
            Crying eyes (with tear drop).
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Default">
            <summary>
            Default eyes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Dizzy">
            <summary>
            Dizzy eyes - (X.X).
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.EyeRoll">
            <summary>
            Eyes rolled-up.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Happy">
            <summary>
            Happy eyes - (^.^).
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Hearts">
            <summary>
            Heart eyes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Side">
            <summary>
            Eyes looking sideways.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Squint">
            <summary>
            Squinted eyes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Surprised">
            <summary>
            Surprised eyes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.Wink">
            <summary>
            Winking eyes.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarEyeType.WinkWacky">
            <summary>
            Waky winked eyes - (-.o).
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor">
            <summary>
            Specifies the color of the Avatar's facial hair.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor.Auburn">
            <summary>
            Auburn facial hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor.Black">
            <summary>
            Black facial hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor.Blonde">
            <summary>
            Blonde facial hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor.BlondeGolden">
            <summary>
            Golden facial hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor.Brown">
            <summary>
            Brown facial hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor.BrownDark">
            <summary>
            Dark brown facial hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor.Platinum">
            <summary>
            Platinum facial hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairColor.Red">
            <summary>
            Red facial hair.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarFacialHairType">
            <summary>
            Specifies the type of the Avatar's facial hair.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairType.Blank">
            <summary>
            No facial hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairType.BeardMedium">
            <summary>
            Medium beard.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairType.BeardLight">
            <summary>
            Light beard.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairType.BeardMajestic">
            <summary>
            Majestic beard.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairType.MoustacheFancy">
            <summary>
            Fancy moustache.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarFacialHairType.MoustacheMagnum">
            <summary>
            Magnum moustache.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarHairColor">
            <summary>
            Specifies the color of the Avatar's hair.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.Auburn">
            <summary>
            Auburn hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.Black">
            <summary>
            Black hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.Blonde">
            <summary>
            Blond hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.BlondeGolden">
            <summary>
            Golden hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.Brown">
            <summary>
            Brown hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.BrownDark">
            <summary>
            Dark brown hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.PastelPink">
            <summary>
            Pink hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.Platinum">
            <summary>
            Platinum hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.Red">
            <summary>
            Red hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHairColor.SilverGray">
            <summary>
            Gray hair.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarHatColor">
            <summary>
            Specifies the color of the Avatar's hat.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Blue01">
            <summary>
            Light blue.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Blue02">
            <summary>
            Medium blue.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Blue03">
            <summary>
            Dark blue.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Gray01">
            <summary>
            Light gray.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Gray02">
            <summary>
            Medium gray.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Heather">
            <summary>
            Heather.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.PastelBlue">
            <summary>
            Pastel blue.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.PastelGreen">
            <summary>
            Pastel green.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.PastelOrange">
            <summary>
            Pastel orange.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.PastelRed">
            <summary>
            Pastel red.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.PastelYellow">
            <summary>
            Pastel yellow.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Pink">
            <summary>
            Pink.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.Red">
            <summary>
            Red.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarHatColor.White">
            <summary>
            White.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarMouthType">
            <summary>
            Specifies the type of the Avatar mouth.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Concerned">
            <summary>
            Concerned mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Default">
            <summary>
            Default (happy) mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Disbelief">
            <summary>
            Disbelief mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Eating">
            <summary>
            Eating mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Grimace">
            <summary>
            Grimace mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Sad">
            <summary>
            Sad mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.ScreamOpen">
            <summary>
            Screaming mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Serious">
            <summary>
            Serious mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Smile">
            <summary>
            Smiling mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Tongue">
            <summary>
            Tongue out.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Twinkle">
            <summary>
            Twinkle mouth.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarMouthType.Vomit">
            <summary>
            Vomiting.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarSkinColor">
            <summary>
            Specifies the color of the Avatar skin.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarSkinColor.Tanned">
            <summary>
            Tanned skin.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarSkinColor.Yellow">
            <summary>
            Yellow skin.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarSkinColor.Pale">
            <summary>
            Pale skin.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarSkinColor.Light">
            <summary>
            Light skin.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarSkinColor.Brown">
            <summary>
            Brown skin.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarSkinColor.DarkBrown">
            <summary>
            Dark skin.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarSkinColor.Black">
            <summary>
            Black skin.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarStyle">
            <summary>
            Specifies the type of the Avatar style.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarStyle.Circle">
            <summary>
            Draws the avatar cropped by a blue circle.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarStyle.Transparent">
            <summary>
            Draws the avatar with transparent background.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Avatar.Enums.AvatarTop">
            <summary>
            Specifies the hair/top of the Avatar.
            </summary>
            <remarks>
            For more details see Avataar documentation https://getavataaars.com/.
            </remarks>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.NoHair">
            <summary>
            Bald/no hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.Eyepatch">
            <summary>
            Bald/no hair with an eyepatch.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.Hat">
            <summary>
            Hat.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.Hijab">
            <summary>
            Hijab.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.Turban">
            <summary>
            Turban.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.WinterHat1">
            <summary>
            Square winter hat.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.WinterHat2">
            <summary>
            Round winter hat.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.WinterHat3">
            <summary>
            Christmas winter hat.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.WinterHat4">
            <summary>
            Round winter hat with cat ears.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairBigHair">
            <summary>
            Big long hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairBob">
            <summary>
            Shoulder hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairBun">
            <summary>
            Bun.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairCurly">
            <summary>
            Long curly hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairCurvy">
            <summary>
            Long curvy hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairDreads">
            <summary>
            Dreads.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairFrida">
            <summary>
            Frida Kahlo hairstyle with accessories.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairFro">
            <summary>
            Afro.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairFroBand">
            <summary>
            Afro hair, with band.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairNotTooLong">
            <summary>
            Shoulder hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairShavedSides">
            <summary>
            Long, shaved on the sides.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairMiaWallace">
            <summary>
            Mia Wallace hairstyle.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairStraight">
            <summary>
            Straight long hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairStraight2">
            <summary>
            Straight long hair (curved on the bottom).
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.LongHairStraightStrand">
            <summary>
            Straight long stranded hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairDreads01">
            <summary>
            Short hair with dreads.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairDreads02">
            <summary>
            Short hair with big dreads.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairFrizzle">
            <summary>
            Frizzled hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShaggyMullet">
            <summary>
            Short hair with mullet.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShortCurly">
            <summary>
            Short curly hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShortFlat">
            <summary>
            Short flat hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShortRound">
            <summary>
            Short round hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairShortWaved">
            <summary>
            Short waved hair.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairSides">
            <summary>
            Bald on top, hair on the sides.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairTheCaesar">
            <summary>
            The Caesar hairstyle.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Avatar.Enums.AvatarTop.ShortHairTheCaesarSidePart">
            <summary>
            The Caesar hairstyle with side part.
            </summary>
        </member>
        <member name="T:Falsus.Shared.Models.CityModel">
            <summary>
            This class represents a geographic city.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.CityModel.Name">
            <summary>
            Gets or sets the name of the city.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the name of the city.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CityModel.CountryAlpha2">
            <summary>
            Gets or sets the ISO Alpha2 unique identifier of the country.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the Alpha2 ISO country code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CityModel.Region">
            <summary>
            Gets or sets the name of the region.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the city region.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.CityModel.CompareTo(Falsus.Shared.Models.CityModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.CityModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.CityModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.CityModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.CityModel.Equals(Falsus.Shared.Models.CityModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.CityModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.CityModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.ContinentModel">
            <summary>
            This class represents a geographic continent.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.ContinentModel.Alpha2">
            <summary>
            Gets or sets the ISO Alpha2 Continent code.
            </summary>
            <value>
            A string containing the ISO Alpha2 Continent Code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.ContinentModel.Name">
            <summary>
            Gets or sets the name of the Continent.
            </summary>
            <value>
            A string containing the continent name.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.ContinentModel.CompareTo(Falsus.Shared.Models.ContinentModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.ContinentModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.ContinentModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.ContinentModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.ContinentModel.Equals(Falsus.Shared.Models.ContinentModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.ContinentModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.ContinentModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.CoordinatesModel">
            <summary>
            This class represents a position on Earth's surface.
            </summary>
        </member>
        <member name="M:Falsus.Shared.Models.CoordinatesModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Falsus.Shared.Models.CoordinatesModel"/> class.
            </summary>
            <param name="latitude">The latitute of a point on Earth's surface.</param>
            <param name="longitude">The longitude of a point on Earth's surface.</param>
        </member>
        <member name="P:Falsus.Shared.Models.CoordinatesModel.Latitude">
            <summary>
            Gets the latitude of the point represented by this instance.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the latitude value.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CoordinatesModel.Longitude">
            <summary>
            Gets the longitude of the point represented by this instance.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the longitude value.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.CoordinatesModel.CompareTo(Falsus.Shared.Models.CoordinatesModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.CoordinatesModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.CoordinatesModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.CoordinatesModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.CoordinatesModel.Equals(Falsus.Shared.Models.CoordinatesModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.CoordinatesModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.CoordinatesModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.CountryModel">
            <summary>
            This class represents a geographic country.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.CountryModel.Name">
            <summary>
            Gets or sets the name of the country.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the country name.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CountryModel.Alpha2">
            <summary>
            Gets or sets the Alpha2 ISO Country Code.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the Alpha2 ISO Country Code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CountryModel.Alpha3">
            <summary>
            Gets or sets the Alpha3 ISO Country Code.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the Alpha3 ISO Country Code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CountryModel.Numeric">
            <summary>
            Gets or sets the Numeric Country Code.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the numeric country code.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.CountryModel.CompareTo(Falsus.Shared.Models.CountryModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.CountryModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.CountryModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.CountryModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.CountryModel.Equals(Falsus.Shared.Models.CountryModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.CountryModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.CountryModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.CurrencyModel">
            <summary>
            This class represents a monetary currency.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.CurrencyModel.Id">
            <summary>
            Gets or sets the unique identifier for the currency.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the currency identifier.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CurrencyModel.CountryAlpha2">
            <summary>
            Gets or sets the Alpha2 ISO Country Code.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the Alpha2 ISO Country Code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CurrencyModel.CurrencyName">
            <summary>
            Gets or sets the name of the currency.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the name of the currency.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.CurrencyModel.Symbol">
            <summary>
            Gets or sets the currency display symbol.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the symbol of the currency.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.CurrencyModel.CompareTo(Falsus.Shared.Models.CurrencyModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.CurrencyModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.CurrencyModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.CurrencyModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.CurrencyModel.Equals(Falsus.Shared.Models.CurrencyModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.CurrencyModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.CurrencyModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.FileTypeModel">
            <summary>
            This class contains the details for a type of file.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.FileTypeModel.Category">
            <summary>
            Gets or sets the category of the file type.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the category of the file type.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.FileTypeModel.Extension">
            <summary>
            Gets or sets the file extension.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the file extension.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.FileTypeModel.Name">
            <summary>
            Gets or sets the name of the file type.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the name of the file type.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.FileTypeModel.Icon">
            <summary>
            Gets or sets the base64 encoded PNG image file representing
            the icon of the file type.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing base64 encoded PNG image
            file representing the icon of the file type.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.FileTypeModel.IsCommon">
            <summary>
            Gets or sets a value indicating whether or not this
            type of file is commonly used.
            </summary>
            <value>
            True if the type of file is commonly used, otherwise false.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.FileTypeModel.CompareTo(Falsus.Shared.Models.FileTypeModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.FileTypeModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.FileTypeModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.FileTypeModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.FileTypeModel.Equals(Falsus.Shared.Models.FileTypeModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.FileTypeModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.FileTypeModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.JobModel">
            <summary>
            This class represents a Job/Profession.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.JobModel.Id">
            <summary>
            Gets or sets the unique identifier of the job.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the job unique identifier.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.JobModel.Title">
            <summary>
            Gets or sets the title of the job.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the job title.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.JobModel.ParentJobId">
            <summary>
            Gets or sets the unique identifier of the parent job.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the parent job identifier.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.JobModel.CompareTo(Falsus.Shared.Models.JobModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.JobModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.JobModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.JobModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.JobModel.Equals(Falsus.Shared.Models.JobModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.JobModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.JobModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.LegalEntityTypeModel">
            <summary>
            This class represents a type of legal entity.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.LegalEntityTypeModel.CountryAlpha2">
            <summary>
            Gets or sets the Alpha2 ISO Country Code.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the Alpha2 ISO Country Code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.LegalEntityTypeModel.TwoLetterLanguageCode">
            <summary>
            Gets or sets the two letter language code.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the language code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.LegalEntityTypeModel.Abbreviation">
            <summary>
            Gets or sets the legal entity type abbreviation.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the legal entity type abbreviation.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.LegalEntityTypeModel.Name">
            <summary>
            Gets or sets the name of the legal entity type.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the legal entity type name.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.LegalEntityTypeModel.CompareTo(Falsus.Shared.Models.LegalEntityTypeModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.LegalEntityTypeModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.LegalEntityTypeModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.LegalEntityTypeModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.LegalEntityTypeModel.Equals(Falsus.Shared.Models.LegalEntityTypeModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.LegalEntityTypeModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.LegalEntityTypeModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.MimeTypeModel">
            <summary>
            This class represents a MIME type.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.MimeTypeModel.MimeType">
            <summary>
            Gets or sets the MIME Type.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the MIME type.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.MimeTypeModel.Extension">
            <summary>
            Gets or sets the extension of the file type used along with
            this MIME type.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the file extensions.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.MimeTypeModel.Name">
            <summary>
            Gets or sets the name of the MIME type.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the name of the MIME type.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.MimeTypeModel.Category">
            <summary>
            Gets or sets the category of the MIME type.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the category of the MIME type.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.MimeTypeModel.DeprecatedBy">
            <summary>
            Gets or sets the MIME type that replaces the current MIME type.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the MIME type.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.MimeTypeModel.Aliases">
            <summary>
            Gets or sets an array of MIME Types that are aliases of the current MIME type.
            </summary>
            <value>
            An array of <see cref="T:System.String"/> containing the MIME type aliases for this instance.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.MimeTypeModel.IsCommon">
            <summary>
            Gets or sets a value indicating whether or not this
            MIME type is commonly used.
            </summary>
            <value>
            True if the MIME type is commonly used, otherwise false.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.MimeTypeModel.CompareTo(Falsus.Shared.Models.MimeTypeModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.MimeTypeModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.MimeTypeModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.MimeTypeModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.MimeTypeModel.Equals(Falsus.Shared.Models.MimeTypeModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.MimeTypeModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.MimeTypeModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.NationalityModel">
            <summary>
            This class represents a nationality.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.NationalityModel.CountryAlpha2">
            <summary>
            Gets or sets the Alpha2 ISO Country Code.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the Alpha2 ISO Country Code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.NationalityModel.Demonym">
            <summary>
            Gets or sets the nationality demonym.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the demonym.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.NationalityModel.CompareTo(Falsus.Shared.Models.NationalityModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.NationalityModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.NationalityModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.NationalityModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.NationalityModel.Equals(Falsus.Shared.Models.NationalityModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.NationalityModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.NationalityModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.RegionModel">
            <summary>
            This class represents a geographic region.
            </summary>
        </member>
        <member name="P:Falsus.Shared.Models.RegionModel.Code">
            <summary>
            Gets or sets the unique code of the region.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the region unique code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.RegionModel.CountryAlpha2">
            <summary>
            Gets or sets the Alpha2 ISO Country Code.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the Alpha2 ISO Country Code.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.RegionModel.Name">
            <summary>
            Gets or sets the region name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value containing the name of the region.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.RegionModel.Category">
            <summary>
            Gets or sets the region category.
            </summary>
            <value>
            A <see cref="T:System.String"/> value containing the category of the region.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.RegionModel.CompareTo(Falsus.Shared.Models.RegionModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.RegionModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.RegionModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.RegionModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.RegionModel.Equals(Falsus.Shared.Models.RegionModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.RegionModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.RegionModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="T:Falsus.Shared.Models.SemanticVersionModel">
            <summary>
            This class represents a semantic software version.
            </summary>
        </member>
        <member name="F:Falsus.Shared.Models.SemanticVersionModel.Alpha">
            <summary>
            Defines the character that represents the "Alpha" stage (lowercase a).
            </summary>
        </member>
        <member name="F:Falsus.Shared.Models.SemanticVersionModel.Beta">
            <summary>
            Defines the character that represents the "Beta" stage (lowercase b).
            </summary>
        </member>
        <member name="F:Falsus.Shared.Models.SemanticVersionModel.ReleaseCandidate">
            <summary>
            Defines the character that represents the "Release candidate" stage (lowercase rc).
            </summary>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> class.
            </summary>
            <param name="major">The major version number.</param>
            <remarks>
            Creates a <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> that represents versions such as in the form of "Major", such as "1" or "2".
            </remarks>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> class.
            </summary>
            <param name="major">The major version number.</param>
            <param name="minor">The minor version number.</param>
            <remarks>
            Creates a <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> that represents versions in the form of "Major.Minor", such as "1.1" or "1.2".
            </remarks>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> class.
            </summary>
            <param name="major">The major version number.</param>
            <param name="stage">The release stage.
            Must be either "a", or "b" or "rc" in order to be interchangeable with the numeric conterparts: 0, 1 and 2 respectively.
            </param>
            <param name="stageNumber">The stage version number.</param>
            <remarks>
            Creates a <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> that represents versions in the form of "Major-Stage.StageNumber", such as "1-a.1" or "1-b.2".
            </remarks>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> class.
            </summary>
            <param name="major">The major version number.</param>
            <param name="minor">The minor version number.</param>
            <param name="patch">The patch version number.</param>
            <remarks>
            Creates a <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> that represents versions in the form of "Major.Minor.Patch", such as "1.1.1" or "1.2.3".
            </remarks>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.#ctor(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> class.
            </summary>
            <param name="major">The major version number.</param>
            <param name="minor">The minor version number.</param>
            <param name="stage">The release stage.
            Must be either "a", or "b" or "rc" in order to be interchangeable with the numeric conterparts: 0, 1 and 2 respectively.
            </param>
            <param name="stageNumber">The stage version number.</param>
            <remarks>
            Creates a <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> that represents versions in the form of "Major.Minor-Stage.StageNumber", such as "1.1-a.1" or "1.2-rc.1".
            </remarks>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> class.
            </summary>
            <param name="major">The major version number.</param>
            <param name="minor">The minor version number.</param>
            <param name="patch">The patch version number.</param>
            <param name="stageNumber">The stage version number.</param>
            <remarks>
            Creates a <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> that represents versions in the form of "Major.Minor.Patch.StageNumber", such as "1.1.1.1" or "1.2.1.1".
            </remarks>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> class.
            </summary>
            <param name="major">The major version number.</param>
            <param name="minor">The minor version number.</param>
            <param name="patch">The patch version number.</param>
            <param name="stage">The release stage.
            Must be either "a", or "b" or "rc" in order to be interchangeable with the numeric conterparts: 0, 1 and 2 respectively.
            </param>
            <param name="stageNumber">The stage version number.</param>
            <remarks>
            Creates a <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> that represents versions in the form of "Major.Minor.Patch-Stage.StageNumber", such as "1.1.1-b.1" or "1.2.1-rc.2".
            </remarks>
        </member>
        <member name="P:Falsus.Shared.Models.SemanticVersionModel.Major">
            <summary>
            Gets the major version.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> representing the major version.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.SemanticVersionModel.Minor">
            <summary>
            Gets the minor version.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> representing the minor version.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.SemanticVersionModel.Patch">
            <summary>
            Gets the patch version.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> representing the patch version.
            </value>
        </member>
        <member name="P:Falsus.Shared.Models.SemanticVersionModel.Stage">
            <summary>
            Gets the release stage.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the release stage.
            </value>
            <remarks>
            Must be either "a", or "b" or "rc" in order to be interchangeable with the numeric conterparts: 0, 1 and 2 respectively.
            </remarks>
        </member>
        <member name="P:Falsus.Shared.Models.SemanticVersionModel.StageNumber">
            <summary>
            Gets the release stage number.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> representing the release stage number.
            </value>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.op_Equality(Falsus.Shared.Models.SemanticVersionModel,Falsus.Shared.Models.SemanticVersionModel)">
            <summary>
            Indicates whether object <paramref name="a"/> is equal to object <paramref name="b"/> of the same type.
            </summary>
            <param name="a">An instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <param name="b">Another instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <returns>True if the objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.op_Inequality(Falsus.Shared.Models.SemanticVersionModel,Falsus.Shared.Models.SemanticVersionModel)">
            <summary>
            Indicates whether object <paramref name="a"/> is different from object <paramref name="b"/> of the same type.
            </summary>
            <param name="a">An instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <param name="b">Another instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <returns>True if the objects are different; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.op_GreaterThan(Falsus.Shared.Models.SemanticVersionModel,Falsus.Shared.Models.SemanticVersionModel)">
            <summary>
            Indicates whether object <paramref name="a"/> is greater than object <paramref name="b"/> of the same type.
            </summary>
            <param name="a">An instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <param name="b">Another instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <returns>True if object <paramref name="a"/> is greater than <paramref name="b"/>; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.op_LessThan(Falsus.Shared.Models.SemanticVersionModel,Falsus.Shared.Models.SemanticVersionModel)">
            <summary>
            Indicates whether object <paramref name="a"/> is lesser than object <paramref name="b"/> of the same type.
            </summary>
            <param name="a">An instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <param name="b">Another instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <returns>True if object <paramref name="a"/> is lesser than <paramref name="b"/>; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.op_GreaterThanOrEqual(Falsus.Shared.Models.SemanticVersionModel,Falsus.Shared.Models.SemanticVersionModel)">
            <summary>
            Indicates whether object <paramref name="a"/> is greater or equal to object <paramref name="b"/> of the same type.
            </summary>
            <param name="a">An instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <param name="b">Another instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <returns>True if object <paramref name="a"/> is greater or equal to <paramref name="b"/>; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.op_LessThanOrEqual(Falsus.Shared.Models.SemanticVersionModel,Falsus.Shared.Models.SemanticVersionModel)">
            <summary>
            Indicates whether object <paramref name="a"/> is lesser or equal to object <paramref name="b"/> of the same type.
            </summary>
            <param name="a">An instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <param name="b">Another instance of <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared.</param>
            <returns>True if object <paramref name="a"/> is lesser or equal to <paramref name="b"/>; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.CompareTo(Falsus.Shared.Models.SemanticVersionModel)">
            <summary>
            Compares this instance with a specified <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> and
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/>.
            </summary>
            <param name="other">The other <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/> to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.CompareTo(System.Object)">
            <summary>
            Compares this instance with an object of the same type
            returns an integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the specified object.
            </summary>
            <param name="obj">The other object to be compared with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or
            appears in the same position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.Equals(Falsus.Shared.Models.SemanticVersionModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <remarks>
            The returned string will be on the following format "Major.Minor.Patch-Stage.StageNumber".
            The components without value will be omitted.
            </remarks>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.TryParse(System.String,Falsus.Shared.Models.SemanticVersionModel@)">
            <summary>
            Converts the string representation of a semantic version to its <see cref="T:Falsus.Shared.Models.SemanticVersionModel"/>.
            A return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string to parse.</param>
            <param name="model">
            When this method returns, contains the result of successfully parsing <paramref name="value"/> or an undefined value on failure.
            </param>
            <returns>
            True if <paramref name="value"/> was successfully parsed; otherwise, false.
            </returns>
            <remarks>
            Semantic versions should be represented in the following format: "Major.Minor.Patch-Stage.StageNumber".
            Please note that not all components are required, e.g. sending in "1.2" will populate the Major and Minor components
            while sending "1.2-a.1" will populate Major, Minor, Stage and StageNumber components.
            </remarks>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.GetHashCode">
            <summary>
            Calculates the hash for this instance.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.ValidateStage(System.String)">
            <summary>
            Validates if the provided string represents a valid release stage.
            </summary>
            <param name="stage">The string to be validated.</param>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the <paramref name="stage"/> is not one of the following: null or empty, "a", "b" or "rc".
            </exception>
        </member>
        <member name="M:Falsus.Shared.Models.SemanticVersionModel.GetStageIndex(System.String)">
            <summary>
            Converts the provided release stage identifier to its numeric representation.
            </summary>
            <param name="stage">The string to be converted.</param>
            <returns>
            For "a" returns 0, for "b" returns 1, for "rc" returns 2; otherwise -1.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="stage"/> is null or empty.
            </exception>
        </member>
    </members>
</doc>
